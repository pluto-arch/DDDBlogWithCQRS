<?xml version="1.0"?>
<doc>
    <assembly>
        <name>D3.Blog.Application</name>
    </assembly>
    <members>
        <member name="T:D3.Blog.Application.AutoMapper.AutoMapperConfig">
            <summary>
            AutoMapper配置文件
            </summary>
        </member>
        <member name="M:D3.Blog.Application.AutoMapper.AutoMapperConfig.RegisterMappings">
            <summary>
            配置automapper
            </summary>
            <returns></returns>
        </member>
        <member name="T:D3.Blog.Application.AutoMapper.DomainToViewModelMappingProfile">
            <summary>
            领域模型映射成视图模型Dto
            </summary>
        </member>
        <member name="M:D3.Blog.Application.AutoMapper.DomainToViewModelMappingProfile.#ctor">
            <summary>
            配置构造函数，用来创建关系映射
            </summary>
        </member>
        <member name="T:D3.Blog.Application.AutoMapper.ViewModelToDomainMappingProfile">
            <summary>
            视图模型映射成领域命令模型和领域模型
            </summary>
        </member>
        <member name="M:D3.Blog.Application.AutoMapper.ViewModelToDomainMappingProfile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:D3.Blog.Application.Infrastructure.RequestLogger`1">
            <summary>
            请求预处理器-日志记录
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Infrastructure.RequestLogger`1._user">
            <summary>
            当前操作用户
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Infrastructure.RequestLogger`1.#ctor(D3.Blog.Domain.Infrastructure.IUser)">
            <summary>
            构造函数注入
            </summary>
            <param name="logger"></param>
            <param name="user"></param>
        </member>
        <member name="M:D3.Blog.Application.Infrastructure.RequestLogger`1.Process(`0,System.Threading.CancellationToken)">
            <summary>
            预处理请求，记录日志
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:D3.Blog.Application.Infrastructure.RequestPerformanceBehaviour`2">
            <summary>
            请求性能记录
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Infrastructure.RequestPerformanceBehaviour`2._user">
            <summary>
            当前操作用户
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Infrastructure.RequestPerformanceBehaviour`2._timer">
            <summary>
            计数器
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Infrastructure.RequestPerformanceBehaviour`2.#ctor(D3.Blog.Domain.Infrastructure.IUser)">
            <summary>
            构造函数注入
            </summary>
            <param name="logger"></param>
            <param name="user"></param>
        </member>
        <member name="M:D3.Blog.Application.Infrastructure.RequestPerformanceBehaviour`2.Handle(`0,System.Threading.CancellationToken,MediatR.RequestHandlerDelegate{`1})">
            <summary>
            请求预处理-性能分析
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:D3.Blog.Application.Infrastructure.RequestValidationBehavior`2">
            <summary>
            请求处理验证
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Infrastructure.RequestValidationBehavior`2._user">
            <summary>
            当前操作用户
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Infrastructure.RequestValidationBehavior`2._validators">
            <summary>
            验证者
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Infrastructure.RequestValidationBehavior`2.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.IValidator{`0}},D3.Blog.Domain.Infrastructure.IUser)">
            <summary>
            构造函数注入
            </summary>
            <param name="validators"></param>
            <param name="logger"></param>
            <param name="user"></param>
        </member>
        <member name="M:D3.Blog.Application.Infrastructure.RequestValidationBehavior`2.Handle(`0,System.Threading.CancellationToken,MediatR.RequestHandlerDelegate{`1})">
            <summary>
            验证请求处理
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Interface.IArticleService.Add(D3.Blog.Application.ViewModels.Article.NewArticleModel)">
            <summary>
            创建
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.IArticleService.Update(D3.Blog.Application.ViewModels.Article.NewArticleModel)">
            <summary>
            更新
            </summary>
            <param name="updatemodel"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.IArticleService.Remove(System.Int32)">
            <summary>
            根据id删除
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.IArticleService.GetById(System.Int32)">
            <summary>
            根据id获取
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Interface.IArticleService.GetList``1(System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.Article,System.Boolean}},System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.Article,``0}})">
            <summary>
            根据条件获取集合
            </summary>
            <param name="expression"></param>
            <param name="orderby"></param>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Interface.IArticleService.GetListByPage``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.Article,System.Boolean}},System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.Article,``0}})">
            <summary>
            分页获取数据
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="expression"></param>
            <param name="orderby"></param>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Interface.IArticleService.GetByFilter(System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.Article,System.Boolean}})">
            <summary>
            根据条件获取单条数据
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:D3.Blog.Application.Interface.ICustomerService">
            <summary>
            Product Service 接口
            这里使用的对象是视图对象模型
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Interface.ICustomerService.Add(D3.Blog.Application.ViewModels.CustomerViewModel)">
            <summary>
            创建
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.ICustomerService.Update(D3.Blog.Application.ViewModels.CustomerViewModel)">
            <summary>
            更新
            </summary>
            <param name="updatemodel"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.ICustomerService.Remove(System.Int32)">
            <summary>
            根据id删除
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.ICustomerService.GetAll">
            <summary>
            查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Interface.ICustomerService.GetById(System.Int32)">
            <summary>
            根据id查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Interface.IPostGroupServer.Add(D3.Blog.Application.ViewModels.PostGroup.PostGroupViewModel)">
            <summary>
            创建
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.IPostGroupServer.Update(D3.Blog.Application.ViewModels.PostGroup.PostGroupViewModel)">
            <summary>
            更新
            </summary>
            <param name="updatemodel"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.IPostGroupServer.Remove(System.Int32)">
            <summary>
            根据id删除
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:D3.Blog.Application.Interface.IPostGroupServer.GetById(System.Int32)">
            <summary>
            根据id获取
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Interface.IPostGroupServer.GetList``1(System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.PostSeries,System.Boolean}})">
            <summary>
            根据条件获取集合
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:D3.Blog.Application.Services.Articles.ArticleService">
            <summary>
            文章Service
            </summary>
            <summary>
            文章查询部分
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.Articles.ArticleService._mapper">
            <summary>
            automapper对象
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.Articles.ArticleService._articleRepository">
            <summary>
            Article仓储
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.Articles.ArticleService.Bus">
            <summary>
            总线
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.Articles.ArticleService._logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Services.Articles.ArticleService.Add(D3.Blog.Application.ViewModels.Article.NewArticleModel)">
            <summary>
            新增
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:D3.Blog.Application.Services.Articles.ArticleService.GetById(System.Int32)">
            <summary>
            根据id查找记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Services.Articles.ArticleService.GetListByPage``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.Article,System.Boolean}},System.Linq.Expressions.Expression{System.Func{D3.Blog.Domain.Entitys.Article,``0}})">
            <summary>
            分页获取数据
            </summary>
            <typeparam name="TKey">排序类型</typeparam>
            <param name="pageSize">页大小</param>
            <param name="pageIndex">页索引（1）开始</param>
            <param name="expression">查询条件</param>
            <param name="orderby">排序条件</param>
            <returns></returns>
        </member>
        <member name="T:D3.Blog.Application.Services.Customer.CustomerService">
            <summary>
            分部类，Customer的写命令服务
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.Customer.CustomerService._mapper">
            <summary>
            automapper对象
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.Customer.CustomerService._customerRepository">
            <summary>
            customer仓储
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.Customer.CustomerService.Bus">
            <summary>
            总线
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Services.Customer.CustomerService.#ctor(AutoMapper.IMapper,D3.Blog.Domain.Infrastructure.IRepositorys.ICustomerRepository,D3.Blog.Domain.Core.BUS.IMediatorHandler)">
            <summary>
            构造函数
            </summary>
            <param name="mapper"></param>
            <param name="customerRepository"></param>
            <param name="bus"></param>
        </member>
        <member name="M:D3.Blog.Application.Services.Customer.CustomerService.Add(D3.Blog.Application.ViewModels.CustomerViewModel)">
            <summary>
            新增
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:D3.Blog.Application.Services.Customer.CustomerService.Remove(System.Int32)">
            <summary>
            按id移除
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:D3.Blog.Application.Services.Customer.CustomerService.Update(D3.Blog.Application.ViewModels.CustomerViewModel)">
            <summary>
            更新
            </summary>
            <param name="updatemodel"></param>
        </member>
        <member name="M:D3.Blog.Application.Services.Customer.CustomerService.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Services.Customer.CustomerService.GetAll">
            <summary>
            查询全部
            </summary>
            <returns></returns>
        </member>
        <member name="M:D3.Blog.Application.Services.Customer.CustomerService.GetById(System.Int32)">
            <summary>
            根据id查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:D3.Blog.Application.Services.PostGroup.PostGroupServer._mapper">
            <summary>
            automapper对象
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.PostGroup.PostGroupServer._postGroupRepository">
            <summary>
            Article仓储
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.PostGroup.PostGroupServer.Bus">
            <summary>
            总线
            </summary>
        </member>
        <member name="F:D3.Blog.Application.Services.PostGroup.PostGroupServer._logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:D3.Blog.Application.Services.PostGroup.PostGroupServer.#ctor(AutoMapper.IMapper,D3.Blog.Domain.Infrastructure.IRepositorys.IPostGroupRepository,D3.Blog.Domain.Core.BUS.IMediatorHandler,Infrastructure.NLoger.ICustomerLogging)">
            <summary>
            构造函数
            </summary>
            <param name="mapper"></param>
            <param name="postGroupRepository"></param>
            <param name="bus"></param>
            <param name="logger"></param>
        </member>
        <member name="T:D3.Blog.Application.ViewModels.Article.NewArticleModel">
            <summary>
            文章新增model
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.ContentMd">
            <summary>
            markdown格式内容
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.ContentHtml">
            <summary>
            html格式内容
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.Author">
            <summary>
            非原创时的原作者
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.ExternalUrl">
            <summary>
            非原创时的外部链接
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.Tags">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.BlogType">
            <summary>
            博客类型：1原创。2转载。3翻译....
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.ArticleType">
            <summary>
            文章类型
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.Status">
            <summary>
            文章的状态：0已经发布。1保存为草稿。3审核中
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.CreateTime">
            <summary>
            创建事件
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.NewArticleModel.GroupId">
            <summary>
            文章分组id
            </summary>
        </member>
        <member name="T:D3.Blog.Application.ViewModels.Article.EditArticleModel">
            <summary>
            文章编辑model
            </summary>
        </member>
        <member name="T:D3.Blog.Application.ViewModels.Article.ArticleViewModel">
            <summary>
            文章查看model
            </summary>
        </member>
        <member name="M:D3.Blog.Application.ViewModels.Article.ArticleViewModel.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Nullable{D3.Blog.Domain.Enums.ArticleSource},System.String,D3.Blog.Domain.Enums.ArticleStatus,System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数赋值
            </summary>
            <param name="id"></param>
            <param name="title"></param>
            <param name="contentMd"></param>
            <param name="contentHtml"></param>
            <param name="author"></param>
            <param name="tags"></param>
            <param name="blogType"></param>
            <param name="articleType"></param>
            <param name="status"></param>
            <param name="createTime"></param>
            <param name="viewCount"></param>
            <param name="commonCount"></param>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.Id">
            <summary>
            文章编号
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.Title">
            <summary>
            文章标题
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.ContentMd">
            <summary>
            md格式内容
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.ContentHtml">
            <summary>
            html格式内容
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.Tags">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.BlogType">
            <summary>
            博客类型：1原创。2转载。3翻译....
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.ArticleType">
            <summary>
            文章类型
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.Status">
            <summary>
            文章的状态：0已经发布。1保存为草稿。3审核中
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.ViewCount">
            <summary>
            浏览次数
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.CommonCount">
            <summary>
            收藏次数
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.Article.ArticleViewModel.SupportCount">
            <summary>
            点在支持次数
            </summary>
        </member>
        <member name="T:D3.Blog.Application.ViewModels.CustomerViewModel">
            <summary>
            Product 视图模型
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.CustomerViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.CustomerViewModel.Name">
            <summary>
            customer名称
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.CustomerViewModel.Email">
            <summary>
            customer邮箱
            </summary>
        </member>
        <member name="P:D3.Blog.Application.ViewModels.CustomerViewModel.BirthDate">
            <summary>
            customer出生日期
            </summary>
        </member>
        <member name="T:D3.Blog.Application.ViewModels.PostGroup.PostGroupViewModel">
            <summary>
            新增viewmodel
            </summary>
        </member>
        <member name="T:D3.Blog.Application.ViewModels.PostGroup.ShowPostGroupViewModel">
            <summary>
            查看编辑viewmodel
            </summary>
        </member>
    </members>
</doc>
